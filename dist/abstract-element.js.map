{"version":3,"file":"abstract-element.js","sourceRoot":"","sources":["../src/abstract-element.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,eAAe,CAAC;AAOtC,MAAM,2BAAqC,SAAQ,WAAW;IAS5D,YACE,gBAAsC,EACtC,cAAsB,EAAE,EACxB,MAAM,GAAG,KAAK,EACd,OAA0B,MAAM;QAEhC,KAAK,EAAE,CAAC;QAbA,SAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QACtB,UAAK,GAA4B,EAAE,CAAC;QAa5C,IAAI;YACF,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC;YAClC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;SAC3B;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;SAC1C;QAED,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;SACzD;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;QAED,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,EAAE;YACrC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC,UAAU,IAAI,CAAC,MAAM,UAAU,CAAC;SAChE;IACH,CAAC;IAOD,iBAAiB,CAAC,mBAA6B,EAAE;QAC/C,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAOD,wBAAwB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ;QAC/C,IAAI,QAAQ,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;YAC1D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;YAC5B,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;IACH,CAAC;IAOD,aAAa,CAAC,KAAe;QAC3B,IAAI,OAAO,KAAK,KAAK,WAAW;YAC9B,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACzC,IAAI,OAAO,QAAQ,KAAK,WAAW,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACxD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;iBAC7B;YACH,CAAC,CAAC,CAAC;IACP,CAAC;IAQD,MAAM,CAAC,QAAa,IAAI;QACtB,IAAI,CAAC,IAAI,CAAA,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC;IAC1E,CAAC;CAEF;AAMD,MAAM,iBAAiB,OAAe;IACpC,OAAO,CAAC,mBAAyC,EAAE,EAAE;QACnD,IAAI;YACF,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;SACrD;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;SACpB;IAEH,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import hyperHTML from 'hyperhtml/esm';\n\n\n\n/**\n * Abstract component\n */\nexport abstract class AbstractWebComponent extends HTMLElement {\n  private html: any;\n  protected wire = hyperHTML.wire;\n  protected props: { [x: string]: string } = {};\n\n  protected _template: (html, scope) => any;\n  protected _style: string;\n\n\n  constructor(\n    templateFunction: (html, scope) => any,\n    staticStyle: string = '',\n    shadow = false,\n    mode: 'open' | 'closed' = 'open'\n  ) {\n    super();\n    try {\n      this._template = templateFunction;\n      this._style = staticStyle;\n    } catch (error) {\n      console.warn('Can not find a template!');\n    }\n\n    if (shadow) {\n      this.html = hyperHTML.bind(this.attachShadow({ mode }));\n    } else {\n      this.html = hyperHTML.bind(this);\n    }\n\n    if (this._style && this._style !== '') {\n      this._style = hyperHTML.wire() `<style>${this._style}</style>`;\n    }\n  }\n\n\n  /**\n   * LIFECYCLE\n   * Invoked when the custom element is first connected to the document's DOM.\n   */\n  connectedCallback(initialPropsList: string[] = []): void {\n    this._initialProps(initialPropsList);\n    this.render();\n  }\n\n\n  /**\n   * LIFECYCLE\n   * Invoked when one of the custom element's attributes is added, removed, or changed.\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue !== newValue && this.props[name] !== newValue) {\n      this.props[name] = newValue;\n      this.render();\n    }\n  }\n\n\n  /**\n   * Initialization\n   * @param props - attribute for initialization\n   */\n  _initialProps(props: string[]): void {\n    if (typeof props !== 'undefined')\n      props.forEach(prop => {\n        const propAttr = this.getAttribute(prop);\n        if (typeof propAttr !== 'undefined' && propAttr !== null) {\n          this.props[prop] = propAttr;\n        }\n      });\n  }\n\n\n  /**\n   * Render function\n   * \n   * @param scope - scope in the template ('this' by default)\n   */\n  render(scope: any = this): void {\n    this.html`${this._style}${this._template(hyperHTML.wire(this), scope)}`;\n  }\n\n}\n\n\n/**\n * Directive for define Custom Element\n */\nexport function Define(nameTag: string) {\n  return (originalConstructor: new (...args) => any) => {\n    try {\n      customElements.define(nameTag, originalConstructor);\n    } catch (error) {\n      console.warn(error)\n    }\n\n  };\n}\n"]}