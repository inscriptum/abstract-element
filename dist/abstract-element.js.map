{"version":3,"file":"abstract-element.js","sourceRoot":"","sources":["../src/abstract-element.ts"],"names":[],"mappings":"AAGA,MAAM,OAAgB,eAAgB,SAAQ,WAAW;IAAzD;;QAEY,cAAS,GAAY,KAAK,CAAC;QAG3B,SAAI,GAA4B,EAAE,CAAC;IAgD/C,CAAC;IA5CC,IAAc,KAAK,CAAC,QAAa;QAC/B,IAAI,CAAC,MAAM,GAAG,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IACD,IAAc,KAAK;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,MAAM,KAAK,kBAAkB;QAC3B,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,CAAC;IAQD,iBAAiB;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAOD,wBAAwB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ;QAC/C,IAAI,QAAQ,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;YACzD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;;AAzCM,yBAAS,GAA4B,EAAE,CAAC","sourcesContent":["/**\n * Abstract render to create web component\n */\nexport abstract class AbstractElement extends HTMLElement {\n  static attrNames: { [x: string]: string } = {};\n  protected connected: boolean = false;\n  protected attach: any;\n  protected html: any;\n  protected attr: { [x: string]: string } = {};\n  protected _style: any;\n\n  protected _scope: any;\n  protected set state(newState: any) {\n    this._scope = newState || this.state;\n    this.renderElement();\n  }\n  protected get state() {\n    return this._scope;\n  }\n\n  static get observedAttributes() {\n    return Object.keys(this.attrNames).map(key => this.attrNames[key]);\n  }\n\n\n\n  /**\n   * LIFECYCLE\n   * Invoked when the custom element is first connected to the document's DOM.\n   */\n  connectedCallback(): void {\n    this.connected = true;\n    this.renderElement();\n  }\n\n\n  /**\n   * LIFECYCLE\n   * Invoked when one of the custom element's attributes is added, removed, or changed.\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue !== newValue && this.attr[name] !== newValue) {\n      this.attr[name] = newValue;\n      this.renderElement();\n    }\n  }\n\n\n  /**\n   * Render function\n   */\n  abstract renderElement()\n\n\n  abstract render()\n\n}\n"]}