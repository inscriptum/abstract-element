{"version":3,"file":"abstract-lit.element.js","sourceRoot":"","sources":["../src/abstract-lit.element.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,UAAU,CAAC;AAQpC,MAAM,yBAAmC,SAAQ,WAAW;IAsB1D,YACE,cAAsB,EAAE,EACxB,MAAM,GAAG,KAAK,EACd,OAA0B,MAAM;QAEhC,KAAK,EAAE,CAAC;QAzBF,cAAS,GAAY,KAAK,CAAC;QAEzB,SAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACpB,SAAI,GAA4B,EAAE,CAAC;QAuB3C,IAAI;YACF,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;SAC3B;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;SAC9C;QAED,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;SAC5F;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACrE;QAED,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,EAAE;YACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAA,UAAU,IAAI,CAAC,MAAM,UAAU,CAAC;SACxD;IACH,CAAC;IAlCD,IAAc,KAAK,CAAC,QAAa;QAC/B,IAAI,CAAC,MAAM,GAAG,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IACD,IAAc,KAAK;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,MAAM,KAAK,kBAAkB;QAC3B,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,CAAC;IAgCD,iBAAiB;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAOD,wBAAwB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ;QAC/C,IAAI,QAAQ,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;YACzD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAMD,aAAa;QACX,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAA,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;SACxD;IACH,CAAC;;AA3EM,4BAAS,GAA4B,EAAE,CAAC","sourcesContent":["import * as litHtml from 'lit-html';\nimport { TemplateResult } from 'lit-html';\n\n\n\n/**\n * Abstract element to create web component with lit-html render function\n */\nexport abstract class AbstractLitElement extends HTMLElement {\n  static attrNames: { [x: string]: string } = {};\n  private connected: boolean = false;\n  private attach: any;\n  protected html = litHtml.html;\n  protected attr: { [x: string]: string } = {};\n  protected _style: any;\n\n  private _scope: any;\n  protected set state(newState: any) {\n    this._scope = newState || this.state;\n    this.renderElement();\n  }\n  protected get state() {\n    return this._scope;\n  }\n\n  static get observedAttributes() {\n    return Object.keys(this.attrNames).map(key => this.attrNames[key]);\n  }\n\n\n  constructor(\n    staticStyle: string = '',\n    shadow = false,\n    mode: 'open' | 'closed' = 'open'\n  ) {\n    super();\n    try {\n      this._style = staticStyle;\n    } catch (error) {\n      console.warn('Can not find a static style!');\n    }\n\n    if (shadow) {\n      this.attach = ((a, b) => { litHtml.render(b, a) }).bind(null, this.attachShadow({ mode }));\n    } else {\n      this.attach = ((a, b) => { litHtml.render(b, a) }).bind(null, this);\n    }\n\n    if (this._style && this._style !== '') {\n      this._style = this.html`<style>${this._style}</style>`;\n    }\n  }\n\n\n\n  /**\n   * LIFECYCLE\n   * Invoked when the custom element is first connected to the document's DOM.\n   */\n  connectedCallback(): void {\n    this.connected = true;\n    this.renderElement();\n  }\n\n\n  /**\n   * LIFECYCLE\n   * Invoked when one of the custom element's attributes is added, removed, or changed.\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue !== newValue && this.attr[name] !== newValue) {\n      this.attr[name] = newValue;\n      this.renderElement();\n    }\n  }\n\n\n  /**\n   * Render function\n   */\n  renderElement(): void {\n    if (this.connected) {\n      this.attach(this.html`${this._style}${this.render()}`);\n    }\n  }\n\n\n  abstract render(): TemplateResult;\n\n}\n"]}